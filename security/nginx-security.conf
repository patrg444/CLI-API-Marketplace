# Nginx Security Configuration for API Direct Marketplace
# Include this file in your main nginx.conf

# Hide nginx version
server_tokens off;

# Security headers
add_header X-Frame-Options "SAMEORIGIN" always;
add_header X-Content-Type-Options "nosniff" always;
add_header X-XSS-Protection "1; mode=block" always;
add_header Referrer-Policy "strict-origin-when-cross-origin" always;
add_header Content-Security-Policy "default-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.google-analytics.com https://cdn.mixpanel.com; style-src 'self' 'unsafe-inline' https:; img-src 'self' data: https:; font-src 'self' data: https:; connect-src 'self' https://api.stripe.com https://api.mixpanel.com wss:; frame-src 'self' https://js.stripe.com https://hooks.stripe.com;" always;
add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

# SSL Configuration
ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
ssl_prefer_server_ciphers off;
ssl_session_cache shared:SSL:10m;
ssl_session_timeout 10m;
ssl_stapling on;
ssl_stapling_verify on;

# DDoS Protection
limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=api:10m rate=100r/s;
limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/m;
limit_conn_zone $binary_remote_addr zone=addr:10m;

# Request limits
client_body_buffer_size 1K;
client_header_buffer_size 1k;
client_max_body_size 100M;  # Adjust based on your needs
large_client_header_buffers 2 1k;

# Timeouts
client_body_timeout 10;
client_header_timeout 10;
keepalive_timeout 65;
send_timeout 10;

# Gzip compression
gzip on;
gzip_vary on;
gzip_proxied any;
gzip_comp_level 6;
gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml application/atom+xml image/svg+xml;

# Block common exploits
location ~ /\. {
    deny all;
    return 404;
}

location ~ /\.git {
    deny all;
    return 404;
}

location ~ /\.env {
    deny all;
    return 404;
}

# Block access to backup files
location ~ \.(bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist)$ {
    deny all;
    return 404;
}

# Block access to source code files
location ~ \.(py|go|rs|java|c|cpp|h|hpp)$ {
    deny all;
    return 404;
}

# Disable unwanted HTTP methods
if ($request_method !~ ^(GET|HEAD|POST|PUT|DELETE|OPTIONS)$) {
    return 405;
}

# Rate limiting for different endpoints
location /api/auth/login {
    limit_req zone=auth burst=5 nodelay;
    proxy_pass http://backend:8000;
}

location /api/auth/register {
    limit_req zone=auth burst=2 nodelay;
    proxy_pass http://backend:8000;
}

location /api/ {
    limit_req zone=api burst=50 nodelay;
    limit_conn addr 100;
    proxy_pass http://backend:8000;
}

location / {
    limit_req zone=general burst=20 nodelay;
    limit_conn addr 50;
    proxy_pass http://marketplace:3000;
}

# Custom error pages
error_page 400 401 402 403 404 /40x.html;
error_page 500 502 503 504 /50x.html;

location = /40x.html {
    root /usr/share/nginx/html;
    internal;
}

location = /50x.html {
    root /usr/share/nginx/html;
    internal;
}

# Health check endpoint (no rate limiting)
location = /health {
    access_log off;
    return 200 "healthy\n";
    add_header Content-Type text/plain;
}

# Monitoring endpoints (restrict to internal IPs)
location /nginx_status {
    stub_status on;
    allow 127.0.0.1;
    allow 10.0.0.0/8;
    allow 172.16.0.0/12;
    allow 192.168.0.0/16;
    deny all;
}

# API Gateway specific security
location /gateway/ {
    # Validate API keys
    if ($http_x_api_key = "") {
        return 401 '{"error": "API key required"}';
    }
    
    # Additional rate limiting for gateway
    limit_req zone=api burst=100 nodelay;
    
    # Proxy to gateway service
    proxy_pass http://gateway:8080;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
}