# Development Dockerfile with hot reload
FROM golang:1.21-alpine

# Install dependencies
RUN apk add --no-cache \
    git \
    make \
    docker-cli \
    curl \
    bash \
    jq

# Install air for hot reload
RUN go install github.com/cosmtrek/air@latest

# Install development tools
RUN go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
RUN go install github.com/securego/gosec/v2/cmd/gosec@latest
RUN go install github.com/golang/mock/mockgen@latest

# Create non-root user
RUN adduser -D -g '' apidirect

# Set working directory
WORKDIR /app

# Create air config
RUN cat > .air.toml << 'EOF'
root = "."
testdata_dir = "testdata"
tmp_dir = "tmp"

[build]
  args_bin = []
  bin = "./tmp/main"
  cmd = "go build -o ./tmp/main ."
  delay = 1000
  exclude_dir = ["assets", "tmp", "vendor", "testdata"]
  exclude_file = []
  exclude_regex = ["_test.go"]
  exclude_unchanged = false
  follow_symlink = false
  full_bin = ""
  include_dir = []
  include_ext = ["go", "tpl", "tmpl", "html"]
  include_file = []
  kill_delay = "0s"
  log = "build-errors.log"
  poll = false
  poll_interval = 0
  rerun = false
  rerun_delay = 500
  send_interrupt = false
  stop_on_error = false

[color]
  app = ""
  build = "yellow"
  main = "magenta"
  runner = "green"
  watcher = "cyan"

[log]
  main_only = false
  time = false

[misc]
  clean_on_exit = false

[screen]
  clear_on_rebuild = false
  keep_scroll = true
EOF

# Switch to non-root user
USER apidirect

# Default command
CMD ["air"]