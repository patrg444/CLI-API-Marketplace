# API-Direct Hosted Platform - Kubernetes Configuration
# This sets up the multi-tenant infrastructure for hosted APIs

apiVersion: v1
kind: Namespace
metadata:
  name: api-direct-system
  labels:
    name: api-direct-system
    managed-by: api-direct

---
# User API Namespaces Template
apiVersion: v1
kind: Namespace
metadata:
  name: user-apis
  labels:
    name: user-apis
    managed-by: api-direct

---
# Ingress Controller for API routing
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: api-direct-ingress
  annotations:
    ingressclass.kubernetes.io/is-default-class: "true"
spec:
  controller: nginx.org/ingress-controller

---
# SSL Certificate Manager
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: admin@api-direct.io
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - http01:
        ingress:
          class: api-direct-ingress

---
# PostgreSQL for multi-tenant databases
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-multi-tenant
  namespace: api-direct-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-multi-tenant
  template:
    metadata:
      labels:
        app: postgres-multi-tenant
    spec:
      containers:
      - name: postgres
        image: postgres:15
        env:
        - name: POSTGRES_DB
          value: "api_direct_hosted"
        - name: POSTGRES_USER
          value: "api_direct_admin"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: api-direct-system
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: api-direct-system
spec:
  selector:
    app: postgres-multi-tenant
  ports:
  - port: 5432
    targetPort: 5432

---
# Redis for caching and rate limiting
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-shared
  namespace: api-direct-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-shared
  template:
    metadata:
      labels:
        app: redis-shared
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: redis-data
          mountPath: /data
      volumes:
      - name: redis-data
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: api-direct-system
spec:
  selector:
    app: redis-shared
  ports:
  - port: 6379
    targetPort: 6379