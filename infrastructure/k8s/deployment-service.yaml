apiVersion: v1
kind: ConfigMap
metadata:
  name: deployment-config
  namespace: api-direct
data:
  PORT: "8081"
  AWS_REGION: "us-east-1"
  DEPLOYMENT_NAMESPACE: "api-direct-apis"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-service
  namespace: api-direct
  labels:
    app: deployment-service
    component: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: deployment-service
  template:
    metadata:
      labels:
        app: deployment-service
        component: backend
    spec:
      serviceAccountName: deployment-service
      containers:
      - name: deployment
        image: ${ECR_REGISTRY}/api-direct/deployment-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8081
          protocol: TCP
        env:
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: deployment-config
              key: PORT
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: deployment-config
              key: AWS_REGION
        - name: DEPLOYMENT_NAMESPACE
          valueFrom:
            configMapKeyRef:
              name: deployment-config
              key: DEPLOYMENT_NAMESPACE
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: deployment-service
  namespace: api-direct
  labels:
    app: deployment-service
spec:
  type: ClusterIP
  selector:
    app: deployment-service
  ports:
  - port: 80
    targetPort: 8081
    protocol: TCP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: deployment-service
  namespace: api-direct
  annotations:
    eks.amazonaws.com/role-arn: ${DEPLOYMENT_SERVICE_ROLE_ARN}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: deployment-service
rules:
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["services", "namespaces"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["pods", "pods/log"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: deployment-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: deployment-service
subjects:
- kind: ServiceAccount
  name: deployment-service
  namespace: api-direct
